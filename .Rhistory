DF_LOI <- read.csv(file = "./data/BlueCarbonData_1.csv")
CF <- read.csv(file = "./data/compaction.csv")
#DF$intertidal <- ifelse(DF$Elevation > "0", "intertidal", "subtidal")
#DF$Coast_no <- DF[, DF$Coast == "Atlantic"]
DF$c_dens <- DF$OC_Per*DF$Corrected_DBD_g_cm3 # C (g / cm3)
DF$Site <- factor(DF$Site)
DF$Type <- factor(DF$Type)
DF$estCfactorS <- ifelse(DF$Extracted_IntervalStart_Depth_c != "0",  DF$Extracted_IntervalStart_Depth_cm/DF$Corrected_IntervalStart_Depth_cm, "0")
dim(DF)
DF2 <- DF %>%
left_join(DF_cores)
## discovered some weird numbers, looking into it.
# create a datafile mean and sd est conversion factors to identify possible errors
DF_cores <- DF %>%
group_by(SiteCode, Core.Number) %>%
filter(estCfactorS != "0") %>%
summarise(meanCF = mean(as.numeric(as.character(estCfactorS))), sdCF = sd(estCfactorS))
## replacing values for correction factors: [Mary double check this is still needed - March 4]
DF_test <- DF %>%
mutate(estCfactorS = as.numeric(estCfactorS)) %>%
mutate(estCfactorS = replace(estCfactorS, estCfactorS == 0.18018018018018, 0.869565217391304))
## discovered some weird numbers, looking into it.
# create a datafile mean and sd est conversion factors to identify possible errors
DF_cores <- DF %>%
group_by(SiteCode, Core.Number) %>%
filter(estCfactorS != "0") %>%
summarise(meanCF = mean(as.numeric(as.character(estCfactorS))), sdCF = sd(estCfactorS))
## packages
library(tidyverse)
library(nlme)
library(MuMIn)
library(car)
library(ggplot2)
## discovered some weird numbers, looking into it.
# create a datafile mean and sd est conversion factors to identify possible errors
DF_cores <- DF %>%
group_by(SiteCode, Core.Number) %>%
filter(estCfactorS != "0") %>%
summarise(meanCF = mean(as.numeric(as.character(estCfactorS))), sdCF = sd(estCfactorS))
## replacing values for correction factors: [Mary double check this is still needed - March 4]
DF_test <- DF %>%
mutate(estCfactorS = as.numeric(estCfactorS)) %>%
mutate(estCfactorS = replace(estCfactorS, estCfactorS == 0.18018018018018, 0.869565217391304))
DF_cores <- DF_test %>%
group_by(SiteCode, Core.Number) %>%
filter(estCfactorS != "0") %>%
mutate(as.numeric(as.character(estCfactorS))) %>%
summarise(meanCF = mean(estCfactorS), sdCF = sd(estCfactorS))
DF2 <- DF %>%
left_join(DF_cores)
plot(DF2$meanCF, DF2$estCfactorS)
hist(DF2$meanCF)
## having identified problems, we found the original datasheets. bring in Melisa's compaction data and merge
CF2 <- CF %>%
select(-c(CoreName_2, X, sample, compression))
DFc <- DF2 %>%
left_join(CF2)
DFc2 <- DFc %>%
mutate(estCfactorS = as.numeric(estCfactorS)) %>%
mutate(conversion = ifelse(is.na(conversion), "Missing", conversion)) %>%
mutate(meanCF = ifelse(is.na(meanCF), "25", meanCF)) %>%
mutate(CF_final = as.numeric(ifelse(conversion == "Missing", meanCF, conversion))) %>%
mutate(CF_final = ifelse(meanCF == "25", estCfactorS, CF_final))
## spot check sites
DF_SOO <- DFc2 %>%
filter(SiteCode == "SOO") %>%
select(CoreName_2, estCfactorS, meanCF, CF_final)
View(DF_SOO)
plot(DFc2$meanCF, DFc2$CF_final)
hist(DFc2$meanCF)
hist(DFc2$CF_final)
## Create new corrected core segment values
DF3 <- DFc2 %>%
mutate(corr_SD = Extracted_IntervalStart_Depth_cm * CF_final) %>%
mutate(corr_ED = Extracted_IntervalEnd_Depth_cm * CF_final) %>%
mutate(corr_thickness = corr_ED - corr_SD) %>%
mutate(corr_segment_midpoint = (corr_ED + corr_SD)/2) %>%
mutate(c_stock = c_dens * corr_thickness) %>% #C (g / cm2)
select(!c(Elevation, X.y, REI_Scaled, Watercourse_NEAR_DIST.y, Corrected_Midpoint_cm_rounded, Corrected_IntervalStart_Depth_cm, Corrected_IntervalEnd_Depth_cm)) %>%
filter(X.1 != "142") %>%
filter(X.1 != "429") #duplicated rows
plot(DF3$corr_segment_midpoint, DF3$Corrected_Midpoint_cm)
hist(DF3$corr_thickness)
#DF3$c_stock <- DF3$c_dens * DF3$corr_thickness
hist(log(DF3$c_stock))
# Testing random effects
mod0.1 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~ 1 | CoreName_2, method = "ML")
mod0.3 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~ 1 | Site/CoreName_2, method = "ML")
mod0.0 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~ corr_segment_midpoint | CoreName_2, method = "ML")
mod0.2 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~ corr_segment_midpoint | Site/CoreName_2, method = "ML")
anova(mod0.2, mod0.3, mod0.0, mod0.1)
mod18 <- lme(log(c_dens) ~1 + log(REI_Raw) + Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
model.sel(mod0, mod1, mod2,mod3, mod4, mod5, mod6, mod7, mod8, mod9, mod11, mod12, mod13, mod14, mod15, mod16, mod17, mod18, mod18a, mod19, mod20,  mod23, mod24, mod25)
plot(predict(mod18), log(DF3$c_dens))
ggsave("Pred vs mean C_dens 100cm.pdf", path = "./figures/", width = 4, height = 4)
## create the new data frame with the depths we want to predict C_dens for
new_data <- data.frame(CoreName_2 = rep(unique(DF3$CoreName_2), each = 5), corr_segment_midpoint = rep(c("5", "25", "30", "60", "100"), times = 84))
Site_info <- DF3 %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x) %>%
summarise(mud = mean(Percent.Silt.Fraction))
new_data2 <- new_data %>%
left_join(Site_info) %>%
rename(Percent.Silt.Fraction = mud) %>%
mutate(corr_segment_midpoint = as.numeric(corr_segment_midpoint))
predicted_vals <- predict(mod18, new_data2, level = 0:2)
pred_vals <- predicted_vals %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = as.numeric(rep(c("5", "25", "30", "60", "100"), times = 84)))
new_data3 <- new_data2 %>%
left_join(pred_vals)
# predicting new values - do it for each cm 1-100
new_data4 <- data.frame(CoreName_2 = rep(unique(DF3$CoreName_2), each = 100), corr_segment_midpoint = rep(c(1:100), times = 84))
#use site level variables from above
new_data5 <- new_data4 %>%
left_join(Site_info) %>%
rename(Percent.Silt.Fraction = mud) %>%
mutate(corr_segment_midpoint = as.numeric(corr_segment_midpoint))
predicted_vals <- predict(mod18, new_data5, level = 0:2)
pred_vals <- predicted_vals %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = rep(c(1:100), times = 84)) %>%
mutate(c_dens = exp(predict.CoreName_2))
new_data6 <- new_data5 %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x) %>%
mutate(c_60a = ifelse(corr_segment_midpoint < 61, c_dens, 0)) %>%
mutate(c_25a = ifelse(corr_segment_midpoint < 26, c_dens, 0)) %>%
summarise_at(., c("c_dens", "c_60a", "c_25a"), sum)
## checking
data7 <- DF3 %>%
group_by(CoreName_2) %>%
summarise(Mean_c = mean(c_dens)) %>%
left_join(new_data6)
checking_100 <- ggplot(data7, aes(x = Mean_c, y = c_dens)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C density 100 cm")
checking_100
ggsave("Pred vs mean C_dens 100cm.pdf", path = "./figures/", width = 4, height = 4)
checking_60 <- ggplot(data7, aes(x = Mean_c, y = c_60a)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C density 60 cm")
checking_60
ggsave("Pred vs mean C_dens 60cm.pdf", path = "./figures/", width = 4, height = 4)
checking_25 <- ggplot(data7, aes(x = Mean_c, y = c_25a)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C density 25 cm")
checking_25
ggsave("Pred vs mean C_dens 25cm.pdf", path = "./figures/", width = 4, height = 4)
## comparing fixed effects
mod0 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod1 <- lme(log(c_dens) ~1 + log(REI_Raw) + Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
## all site level predictors
mod2 <- lme(log(c_dens) ~1 + log(REI_Raw) + log(Watercourse_NEAR_DIST.x) + Coast, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod3 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod4 <- lme(log(c_dens) ~1 + log(REI_Raw) + log(Watercourse_NEAR_DIST.x)*Type + Coast, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod5 <- lme(log(c_dens) ~1 + log(REI_Raw) + log(Watercourse_NEAR_DIST.x), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod6 <- lme(log(c_dens) ~1 + log(REI_Raw), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod7 <- lme(log(c_dens) ~1, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod8 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + (Corrected_Midpoint_cm), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod9 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod11 <- lme(log(c_dens) ~1 + log(REI_Raw) + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod12 <- lme(log(c_dens) ~1 + Type + log(Watercourse_NEAR_DIST.x) + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod13 <- lme(log(c_dens) ~1 + Type + log(Watercourse_NEAR_DIST.x) + Coast + Corrected_Midpoint_cm + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod14 <- lme(log(c_dens) ~1 + Type + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod15 <- lme(log(c_dens) ~1 + Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod16 <- lme(log(c_dens) ~1 + Type*log(Watercourse_NEAR_DIST.x) + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod17 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod18 <- lme(log(c_dens) ~1 + log(REI_Raw) + Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod18a <- lme(log(c_dens) ~1 + sqrt(Percent.Silt.Fraction) + corr_segment_midpoint, data = DF3, random = ~corr_segment_midpoint| Site/CoreName_2, method = "REML")
mod19 <- lme(log(c_dens) ~1 + log(REI_Raw) + Type + log(Watercourse_NEAR_DIST.x)  + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod20 <- lme(log(c_dens) ~1 + log(REI_Raw) + Type + log(Watercourse_NEAR_DIST.x)  + corr_segment_midpoint, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod23 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod24 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod25 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
model.sel(mod0, mod1, mod2,mod3, mod4, mod5, mod6, mod7, mod8, mod9, mod11, mod12, mod13, mod14, mod15, mod16, mod17, mod18, mod18a, mod19, mod20,  mod23, mod24, mod25)
mod8 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + (corr_segment_midpoint), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod13 <- lme(log(c_dens) ~1 + Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
model.sel(mod0, mod1, mod2,mod3, mod4, mod5, mod6, mod7, mod8, mod9, mod11, mod12, mod13, mod14, mod15, mod16, mod17, mod18, mod18a, mod19, mod20,  mod23, mod24, mod25)
## best with readily available predictors
plot(exp(predict(mod18a)), DF3$c_dens)
## comparing predicted vs observed values
plot(predict(mod18), log(DF3$c_dens))
## best with readily available predictors
plot(predict(mod18a), log(DF3$c_dens))
dim(DF3)
length(unique(DF3$CoreName_2))
length(unique(DF$CoreName_2))
length(unique(DF3$Site))
coefs(mod18)
ranef(mod18)
as.data.frame(ranef(mod18)[2])
hist(as.data.frame(ranef(mod18)[2])[,2])
model.sel(mod0, mod1, mod2,mod3, mod4, mod5, mod6, mod7, mod8, mod9, mod11, mod12, mod13, mod14, mod15, mod16, mod17, mod18, mod18a, mod19, mod20,  mod23, mod24, mod25)
## checking
data7 <- DF3 %>%
group_by(CoreName_2) %>%
summarise(Mean_c = mean(c_dens)) %>%
left_join(new_data6)
range(data7$c_25a)
exp(0.4911335)
exp(117.6393987)
new_data4 <- data.frame(CoreName_2 = rep(unique(DF3$CoreName_2), each = 100), corr_segment_midpoint = rep(c(1:100), times = 84))
Site_info <- DF3 %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x) %>%
summarise(mud = mean(Percent.Silt.Fraction))
#use site level variables from above
new_data5 <- new_data4 %>%
left_join(Site_info) %>%
rename(Percent.Silt.Fraction = mud) %>%
mutate(corr_segment_midpoint = as.numeric(corr_segment_midpoint))
predicted_vals <- predict(mod18, new_data5, level = 0:2)
pred_vals <- predicted_vals %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = rep(c(1:100), times = 84)) %>%
mutate(c_dens = exp(predict.CoreName_2))
new_data6 <- new_data5 %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x) %>%
mutate(c_60a = ifelse(corr_segment_midpoint < 61, c_dens, 0)) %>%
mutate(c_25a = ifelse(corr_segment_midpoint < 26, c_dens, 0)) %>%
summarise_at(., c("c_dens", "c_60a", "c_25a"), sum)
## checking
data7 <- DF3 %>%
group_by(CoreName_2) %>%
summarise(Mean_c = mean(c_dens)) %>%
left_join(new_data6)
checking_25 <- ggplot(data7, aes(x = Mean_c, y = c_25a)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C density 25 cm")
checking_25
hist(DF3$c_dens)
View(DF3)
## checking
data7 <- DF3 %>%
group_by(CoreName_2) %>%
summarise(Mean_c = mean(c_dens)*100) %>%
left_join(new_data6)
checking_100 <- ggplot(data7, aes(x = Mean_c, y = c_dens)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C density 100 cm")
checking_100
checking_100 <- ggplot(data7, aes(x = Mean_c, y = c_dens)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C density 100 cm") +
abline(1,1)
checking_100 <- ggplot(data7, aes(x = Mean_c, y = c_dens)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C density 100 cm") +
abline(0,1)
checking_100
checking_100 <- ggplot(data7, aes(x = Mean_c, y = c_dens)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C density 100 cm") +
geom_abline(intercept = 0,slope = 1)
checking_100 <- ggplot(data7, aes(x = Mean_c, y = c_dens)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C density 100 cm") +
geom_abline(intercept = 0, slope = 1)
checking_100
checking_60 <- ggplot(data7, aes(x = Mean_c, y = c_60a)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C density 60 cm") +
geom_abline(intercept = 0, slope = 1)
checking_60
checking_100 <- ggplot(data7, aes(x = Mean_c*100, y = c_dens)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C density 100 cm") +
geom_abline(intercept = 0, slope = 1)
checking_100
## checking
data7 <- DF3 %>%
group_by(CoreName_2) %>%
summarise(Mean_c = mean(c_dens)) %>%
left_join(new_data6)
checking_100 <- ggplot(data7, aes(x = Mean_c*100, y = c_dens)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C density 100 cm") +
geom_abline(intercept = 0, slope = 1)
checking_100
checking_60 <- ggplot(data7, aes(x = Mean_c*60, y = c_60a)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C density 60 cm") +
geom_abline(intercept = 0, slope = 1)
checking_60
checking_25 <- ggplot(data7, aes(x = Mean_c*25, y = c_25a)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C density 25 cm")
checking_25 <- ggplot(data7, aes(x = Mean_c*25, y = c_25a)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C density 25 cm") +
geom_abline(intercept = 0, slope = 1)
checking_25
checking_100 <- ggplot(data7, aes(x = Mean_c*100, y = c_dens)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C density 100 cm") +
geom_abline(intercept = 0, slope = 1)
checking_100
ggsave("Pred vs mean C_dens 100cm.pdf", path = "./figures/", width = 4, height = 4)
checking_60 <- ggplot(data7, aes(x = Mean_c*60, y = c_60a)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C density 60 cm") +
geom_abline(intercept = 0, slope = 1)
checking_60
ggsave("Pred vs mean C_dens 60cm.pdf", path = "./figures/", width = 4, height = 4)
checking_25 <- ggplot(data7, aes(x = Mean_c*25, y = c_25a)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C density 25 cm") +
geom_abline(intercept = 0, slope = 1)
checking_25
ggsave("Pred vs mean C_dens 25cm.pdf", path = "./figures/", width = 4, height = 4)
range(c_60a)
range(data7$c_60a)
# Modeling Carbon Stock with ranef for depth effect
mod0.1 <- lme(log(c_stock + 0.01) ~ 1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~ 1 | CoreName_2, method = "ML")
mod0.3 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~ 1 | Site/CoreName_2, method = "ML")
mod0.0 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~ corr_segment_midpoint | CoreName_2, method = "ML")
mod0.2 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~ corr_segment_midpoint | Site/CoreName_2, method = "ML")
anova(mod0.2, mod0.3, mod0.0, mod0.1)
##model comparison
mod0 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod1 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw) + Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
## all site level predictors
mod2 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw) + log(Watercourse_NEAR_DIST.x) + Coast, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod3 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod4 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw) + log(Watercourse_NEAR_DIST.x)*Type + Coast, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod5 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw) + log(Watercourse_NEAR_DIST.x), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod6 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod7 <- lme(log(c_stock + 0.01) ~1, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod8 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + (corr_segment_midpoint), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod9 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod11 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw) + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod12 <- lme(log(c_stock + 0.01) ~1 + Type + log(Watercourse_NEAR_DIST.x) + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod13 <- lme(log(c_stock + 0.01) ~1 + Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod14 <- lme(log(c_stock + 0.01) ~1 + Type + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod15 <- lme(log(c_stock + 0.01) ~1 + Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod16 <- lme(log(c_stock + 0.01) ~1 + Type*log(Watercourse_NEAR_DIST.x) + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod17 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod18 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw) + Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod19 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw) + Type + log(Watercourse_NEAR_DIST.x)  + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod20 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw) + Type + log(Watercourse_NEAR_DIST.x)  + corr_segment_midpoint, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod23 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw)*Type + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod24 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod25 <- lme(log(c_stock + 0.01) ~1 + log(REI_Raw)*Type + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
model.sel(mod0, mod1, mod2,mod3, mod4, mod5, mod6, mod7, mod8, mod9, mod11, mod12, mod13, mod14, mod15, mod16, mod17, mod18, mod19, mod20,  mod23, mod24, mod25)
## comparing predicted vs observed values
plot(predict(mod18), log(DF3$c_stock))
new_data4s <- data.frame(CoreName_2 = rep(unique(DF3$CoreName_2), each = 100), corr_segment_midpoint = rep(c(1:100), times = 84))
Site_info <- DF3 %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x) %>%
summarise(mud = mean(Percent.Silt.Fraction))
#use site level variables from above
new_data5s <- new_data4s %>%
left_join(Site_info) %>%
rename(Percent.Silt.Fraction = mud) %>%
mutate(corr_segment_midpoint = as.numeric(corr_segment_midpoint))
predicted_vals <- predict(mod18, new_data5s, level = 0:2)
pred_vals <- predicted_vals %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = rep(c(1:100), times = 84)) %>%
mutate(c_dens = exp(predict.CoreName_2))
pred_vals <- predicted_vals %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = rep(c(1:100), times = 84)) %>%
mutate(c_stock = exp(predict.CoreName_2))
new_data6s <- new_data5s %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x) %>%
mutate(c_60a = ifelse(corr_segment_midpoint < 61, c_stock, 0)) %>%
mutate(c_25a = ifelse(corr_segment_midpoint < 26, c_stock, 0)) %>%
summarise_at(., c("c_dens", "c_60a", "c_25a"), sum)
## checking
data7s <- DF3 %>%
group_by(CoreName_2) %>%
summarise(Mean_s = mean(c_stock)) %>%
left_join(new_data6s)
new_data6s <- new_data5s %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x) %>%
mutate(c_60a = ifelse(corr_segment_midpoint < 61, c_stock, 0)) %>%
mutate(c_25a = ifelse(corr_segment_midpoint < 26, c_stock, 0)) %>%
summarise_at(., c("c_dens", "c_60a", "c_25a"), sum)
Site_info <- DF3 %>%
group_by(Site, CoreName_2, REI_Raw, Type, Coast, Watercourse_NEAR_DIST.x) %>%
summarise(mud = mean(Percent.Silt.Fraction))
Site_info_s <- DF3 %>%
group_by(Site, CoreName_2, REI_Raw, Type, Coast, Watercourse_NEAR_DIST.x) %>%
summarise(mud = mean(Percent.Silt.Fraction))
#use site level variables from above
new_data5s <- new_data4s %>%
left_join(Site_info) %>%
rename(Percent.Silt.Fraction = mud) %>%
mutate(corr_segment_midpoint = as.numeric(corr_segment_midpoint))
predicted_vals <- predict(mod11, new_data5s, level = 0:2)
pred_vals_s <- predicted_vals %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = rep(c(1:100), times = 84)) %>%
mutate(c_stock = exp(predict.CoreName_2))
new_data6s <- new_data5s %>%
left_join(pred_vals_s) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x) %>%
mutate(c_60a = ifelse(corr_segment_midpoint < 61, c_stock, 0)) %>%
mutate(c_25a = ifelse(corr_segment_midpoint < 26, c_stock, 0)) %>%
summarise_at(., c("c_dens", "c_60a", "c_25a"), sum)
new_data6s <- new_data5s %>%
left_join(pred_vals_s) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x) %>%
mutate(c_60a = ifelse(corr_segment_midpoint < 61, c_stock, 0)) %>%
mutate(c_25a = ifelse(corr_segment_midpoint < 26, c_stock, 0)) %>%
summarise_at(., c("c_stock", "c_60a", "c_25a"), sum)
## checking
data7s <- DF3 %>%
group_by(CoreName_2) %>%
summarise(Mean_s = mean(c_stock)) %>%
left_join(new_data6s)
checking_100_s <- ggplot(data7s, aes(x = Mean_c*100, y = c_stock)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C density 100 cm") +
geom_abline(intercept = 0, slope = 1)
checking_100_s <- ggplot(data7s, aes(x = Mean_c*100, y = c_stock)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C stock 100 cm") +
geom_abline(intercept = 0, slope = 1)
checking_100
checking_100_s <- ggplot(data7s, aes(x = Mean_s*100, y = c_stock)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C stock 100 cm") +
geom_abline(intercept = 0, slope = 1)
checking_100
checking_100_s <- ggplot(data7s, aes(x = Mean_s*100, y = c_stock)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C stock 100 cm") +
geom_abline(intercept = 0, slope = 1)
checking_100
checking_100_s
#use site level variables from above
new_data5s <- new_data4s %>%
left_join(Site_info_s) %>%
rename(Percent.Silt.Fraction = mud) %>%
mutate(corr_segment_midpoint = as.numeric(corr_segment_midpoint))
predicted_vals <- predict(mod11, new_data5s, level = 0:2)
pred_vals_s <- predicted_vals %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = rep(c(1:100), times = 84)) %>%
mutate(c_stock = exp(predict.CoreName_2))
new_data6s <- new_data5s %>%
left_join(pred_vals_s) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x) %>%
mutate(c_60s = ifelse(corr_segment_midpoint < 61, c_stock, 0)) %>%
mutate(c_25s = ifelse(corr_segment_midpoint < 26, c_stock, 0)) %>%
summarise_at(., c("c_stock", "c_60a", "c_25a"), sum)
new_data6s <- new_data5s %>%
left_join(pred_vals_s) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x) %>%
mutate(c_60s = ifelse(corr_segment_midpoint < 61, c_stock, 0)) %>%
mutate(c_25s = ifelse(corr_segment_midpoint < 26, c_stock, 0)) %>%
summarise_at(., c("c_stock", "c_60s", "c_25s"), sum)
## checking
data7s <- DF3 %>%
group_by(CoreName_2) %>%
summarise(Mean_s = mean(c_stock)) %>%
left_join(new_data6s)
checking_100_s <- ggplot(data7s, aes(x = Mean_s*100, y = c_stock)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C stock 100 cm") +
geom_abline(intercept = 0, slope = 1)
checking_100_s
checking_25_s <- ggplot(data7s, aes(x = Mean_s*25, y = c_25s)) +
geom_point() +
xlab("Mean C gC / cm^3") +
ylab("C stock 25 cm") +
geom_abline(intercept = 0, slope = 1)
checking_25
checking_25_s
checking_60_s <- ggplot(data7s, aes(x = Mean_s*60, y = c_60s)) +
geom_point() +
xlab("Mean C gC / cm^2") +
ylab("C stock 60 cm") +
geom_abline(intercept = 0, slope = 1)
checking_60_s
summary(mod11)
## comparing predicted vs observed values
plot(predict(mod11), log(DF3$c_stock))
