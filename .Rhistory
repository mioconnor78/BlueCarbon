plot(Effect("Watercourse_NEAR_DIST.x", mod18, residuals = TRUE))
ggsave("Watercourse_C_dens.pdf", path = "./figures/", width = 5, height = 3)
summary(mod18)
plot(Effect("Percent.Silt.Fraction", mod18, residuals = TRUE))
ggsave("Mud_C_dens.pdf", path = "./figures/", width = 5, height = 3)
plot(Effect("Type", mod18, residuals = TRUE))
ggsave("SG_C_dens.pdf", path = "./figures/", width = 5, height = 3)
## packages
library(tidyverse)
library(nlme)
library(MuMIn)
library(car)
library(ggplot2)
library(effects)
#Read in data ----
DF <- read.csv(file = "./data/WongChristensenDataforModellingOct19.csv")
DF_LOI <- read.csv(file = "./data/BlueCarbonData_1.csv")
CF <- read.csv(file = "./data/compaction.csv")
#DF$intertidal <- ifelse(DF$Elevation > "0", "intertidal", "subtidal")
#DF$Coast_no <- DF[, DF$Coast == "Atlantic"]
DF$c_dens <- DF$OC_Per*DF$Corrected_DBD_g_cm3 # C (g / cm3)
DF$Site <- factor(DF$Site)
DF$Type <- factor(DF$Type)
DF$estCfactorS <- ifelse(DF$Extracted_IntervalStart_Depth_c != "0",  DF$Extracted_IntervalStart_Depth_cm/DF$Corrected_IntervalStart_Depth_cm, "0")
## discovered some weird numbers, looking into it.
# create a datafile mean and sd est conversion factors to identify possible errors
DF_cores <- DF %>%
group_by(SiteCode, Core.Number) %>%
filter(estCfactorS != "0") %>%
summarise(meanCF = mean(as.numeric(as.character(estCfactorS))), sdCF = sd(estCfactorS))
## replacing values for correction factors: [Mary double check this is still needed - March 4]
DF_test <- DF %>%
mutate(estCfactorS = as.numeric(estCfactorS)) %>%
mutate(estCfactorS = replace(estCfactorS, estCfactorS == 0.18018018018018, 0.869565217391304))
DF_cores <- DF_test %>%
group_by(SiteCode, Core.Number) %>%
filter(estCfactorS != "0") %>%
mutate(as.numeric(as.character(estCfactorS))) %>%
summarise(meanCF = mean(estCfactorS), sdCF = sd(estCfactorS))
DF2 <- DF %>%
left_join(DF_cores)
## having identified problems, we found the original datasheets. bring in Melisa's compaction data and merge
CF2 <- CF %>%
select(-c(CoreName_2, X, sample, compression))
DFc <- DF2 %>%
left_join(CF2)
DFc2 <- DFc %>%
mutate(estCfactorS = as.numeric(estCfactorS)) %>%
mutate(conversion = ifelse(is.na(conversion), "Missing", conversion)) %>%
mutate(meanCF = ifelse(is.na(meanCF), "25", meanCF)) %>%
mutate(CF_final = as.numeric(ifelse(conversion == "Missing", meanCF, conversion))) %>%
mutate(CF_final = ifelse(meanCF == "25", estCfactorS, CF_final))
## Create new corrected core segment values
DF3 <- DFc2 %>%
mutate(corr_SD = Extracted_IntervalStart_Depth_cm * CF_final) %>%
mutate(corr_ED = Extracted_IntervalEnd_Depth_cm * CF_final) %>%
mutate(corr_thickness = corr_ED - corr_SD) %>%
mutate(corr_segment_midpoint = (corr_ED + corr_SD)/2) %>%
mutate(c_stock = c_dens * corr_thickness) %>% #C (g / cm2)
select(!c(Elevation, X.y, REI_Scaled, Watercourse_NEAR_DIST.y, Corrected_Midpoint_cm_rounded, Corrected_IntervalStart_Depth_cm, Corrected_IntervalEnd_Depth_cm)) %>%
filter(X.1 != "142") %>%
filter(X.1 != "429") #duplicated rows
plot(DF3$corr_segment_midpoint, DF3$Corrected_Midpoint_cm)
mod18 <- lme(log(c_dens) ~1 + log(REI_Raw) + Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
new_data4 <- data.frame(CoreName_2 = rep(unique(DF3$CoreName_2), each = 100), corr_segment_midpoint = rep(c(1:100), times = 84))
Site_info <- DF3 %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x) %>%
summarise(mud = mean(Percent.Silt.Fraction))
#use site level variables from above
new_data5 <- new_data4 %>%
left_join(Site_info) %>%
rename(Percent.Silt.Fraction = mud) %>%
mutate(corr_segment_midpoint = as.numeric(corr_segment_midpoint))
predicted_vals <- predict(mod18, new_data5, level = 0:2)
View(predicted_vals)
pred_vals <- predicted_vals %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = rep(c(1:100), times = 84)) %>%
mutate(c_dens = exp(predict.CoreName_2))
View(pred_vals)
## packages
library(tidyverse)
library(nlme)
library(MuMIn)
library(car)
library(ggplot2)
library(effects)
#Read in data ----
DF <- read.csv(file = "./data/WongChristensenDataforModellingOct19.csv")
DF_LOI <- read.csv(file = "./data/BlueCarbonData_1.csv")
CF <- read.csv(file = "./data/compaction.csv")
#DF$intertidal <- ifelse(DF$Elevation > "0", "intertidal", "subtidal")
#DF$Coast_no <- DF[, DF$Coast == "Atlantic"]
DF$c_dens <- DF$OC_Per*DF$Corrected_DBD_g_cm3 # C (g / cm3)
DF$Site <- factor(DF$Site)
DF$Type <- factor(DF$Type)
DF$estCfactorS <- ifelse(DF$Extracted_IntervalStart_Depth_c != "0",  DF$Extracted_IntervalStart_Depth_cm/DF$Corrected_IntervalStart_Depth_cm, "0")
## discovered some weird numbers, looking into it.
# create a datafile mean and sd est conversion factors to identify possible errors
DF_cores <- DF %>%
group_by(SiteCode, Core.Number) %>%
filter(estCfactorS != "0") %>%
summarise(meanCF = mean(as.numeric(as.character(estCfactorS))), sdCF = sd(estCfactorS))
## replacing values for correction factors: [Mary double check this is still needed - March 4]
DF_test <- DF %>%
mutate(estCfactorS = as.numeric(estCfactorS)) %>%
mutate(estCfactorS = replace(estCfactorS, estCfactorS == 0.18018018018018, 0.869565217391304))
DF_cores <- DF_test %>%
group_by(SiteCode, Core.Number) %>%
filter(estCfactorS != "0") %>%
mutate(as.numeric(as.character(estCfactorS))) %>%
summarise(meanCF = mean(estCfactorS), sdCF = sd(estCfactorS))
DF2 <- DF %>%
left_join(DF_cores)
plot(DF2$meanCF, DF2$estCfactorS)
## having identified problems, we found the original datasheets. bring in Melisa's compaction data and merge
CF2 <- CF %>%
select(-c(CoreName_2, X, sample, compression))
DFc <- DF2 %>%
left_join(CF2)
DFc2 <- DFc %>%
mutate(estCfactorS = as.numeric(estCfactorS)) %>%
mutate(conversion = ifelse(is.na(conversion), "Missing", conversion)) %>%
mutate(meanCF = ifelse(is.na(meanCF), "25", meanCF)) %>%
mutate(CF_final = as.numeric(ifelse(conversion == "Missing", meanCF, conversion))) %>%
mutate(CF_final = ifelse(meanCF == "25", estCfactorS, CF_final))
## Create new corrected core segment values
DF3 <- DFc2 %>%
mutate(corr_SD = Extracted_IntervalStart_Depth_cm * CF_final) %>%
mutate(corr_ED = Extracted_IntervalEnd_Depth_cm * CF_final) %>%
mutate(corr_thickness = corr_ED - corr_SD) %>%
mutate(corr_segment_midpoint = (corr_ED + corr_SD)/2) %>%
mutate(c_stock = c_dens * corr_thickness) %>% #C (g / cm2)
select(!c(Elevation, X.y, REI_Scaled, Watercourse_NEAR_DIST.y, Corrected_Midpoint_cm_rounded, Corrected_IntervalStart_Depth_cm, Corrected_IntervalEnd_Depth_cm)) %>%
filter(X.1 != "142") %>%
filter(X.1 != "429") #duplicated rows
## DF3 is the dataset to use.
write.csv(DF3, "./data/BCdataforanalysis.csv")
mod18 <- lme(log(c_dens) ~1 + log(REI_Raw) + Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
summary(mod18)
## comparing fixed effects
mod0 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod1 <- lme(log(c_dens) ~1 + log(REI_Raw) + Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
## all site level predictors
mod2 <- lme(log(c_dens) ~1 + log(REI_Raw) + log(Watercourse_NEAR_DIST.x) + Coast, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod3 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod4 <- lme(log(c_dens) ~1 + log(REI_Raw) + log(Watercourse_NEAR_DIST.x)*Type + Coast, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod5 <- lme(log(c_dens) ~1 + log(REI_Raw) + log(Watercourse_NEAR_DIST.x), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod6 <- lme(log(c_dens) ~1 + log(REI_Raw), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod7 <- lme(log(c_dens) ~1, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod8 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + (corr_segment_midpoint), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod9 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod11 <- lme(log(c_dens) ~1 + log(REI_Raw) + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod12 <- lme(log(c_dens) ~1 + Type + log(Watercourse_NEAR_DIST.x) + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod13 <- lme(log(c_dens) ~1 + Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod14 <- lme(log(c_dens) ~1 + Type + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod15 <- lme(log(c_dens) ~1 + Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod16 <- lme(log(c_dens) ~1 + Type*log(Watercourse_NEAR_DIST.x) + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod17 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod18 <- lme(log(c_dens) ~1 + log(REI_Raw) + Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod18a <- lme(log(c_dens) ~1 + sqrt(Percent.Silt.Fraction) + corr_segment_midpoint, data = DF3, random = ~corr_segment_midpoint| Site/CoreName_2, method = "REML")
mod19 <- lme(log(c_dens) ~1 + log(REI_Raw) + Type + log(Watercourse_NEAR_DIST.x)  + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod20 <- lme(log(c_dens) ~1 + log(REI_Raw) + Type + log(Watercourse_NEAR_DIST.x)  + corr_segment_midpoint, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod23 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod24 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod25 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
model.sel(mod0, mod1, mod2,mod3, mod4, mod5, mod6, mod7, mod8, mod9, mod11, mod12, mod13, mod14, mod15, mod16, mod17, mod18, mod18a, mod19, mod20,  mod23, mod24, mod25)
View(DF)
hist(DF$OC_Per)
range(DF$OC_Per)
range(DF$Corrected_DBD_g_cm3)
DF$estCfactorS <- ifelse(DF$Extracted_IntervalStart_Depth_c != "0",  DF$Extracted_IntervalStart_Depth_cm/DF$Corrected_IntervalStart_Depth_cm, "0")
## discovered some weird numbers, looking into it.
# create a datafile mean and sd est conversion factors to identify possible errors
DF_cores <- DF %>%
group_by(SiteCode, Core.Number) %>%
filter(estCfactorS != "0") %>%
summarise(meanCF = mean(as.numeric(as.character(estCfactorS))), sdCF = sd(estCfactorS))
## replacing values for correction factors: [Mary double check this is still needed - March 4]
DF_test <- DF %>%
mutate(estCfactorS = as.numeric(estCfactorS)) %>%
mutate(estCfactorS = replace(estCfactorS, estCfactorS == 0.18018018018018, 0.869565217391304))
DF_cores <- DF_test %>%
group_by(SiteCode, Core.Number) %>%
filter(estCfactorS != "0") %>%
mutate(as.numeric(as.character(estCfactorS))) %>%
summarise(meanCF = mean(estCfactorS), sdCF = sd(estCfactorS))
DF2 <- DF %>%
left_join(DF_cores)
## having identified problems, we found the original datasheets. bring in Melisa's compaction data and merge
CF2 <- CF %>%
select(-c(CoreName_2, X, sample, compression))
DFc <- DF2 %>%
left_join(CF2)
DFc2 <- DFc %>%
mutate(estCfactorS = as.numeric(estCfactorS)) %>%
mutate(conversion = ifelse(is.na(conversion), "Missing", conversion)) %>%
mutate(meanCF = ifelse(is.na(meanCF), "25", meanCF)) %>%
mutate(CF_final = as.numeric(ifelse(conversion == "Missing", meanCF, conversion))) %>%
mutate(CF_final = ifelse(meanCF == "25", estCfactorS, CF_final))
## Create new corrected core segment values
DF3 <- DFc2 %>%
mutate(corr_SD = Extracted_IntervalStart_Depth_cm * CF_final) %>%
mutate(corr_ED = Extracted_IntervalEnd_Depth_cm * CF_final) %>%
mutate(corr_thickness = corr_ED - corr_SD) %>%
mutate(corr_segment_midpoint = (corr_ED + corr_SD)/2) %>%
mutate(c_stock = c_dens * corr_thickness) %>% #C (g / cm2)
select(!c(Elevation, X.y, REI_Scaled, Watercourse_NEAR_DIST.y, Corrected_Midpoint_cm_rounded, Corrected_IntervalStart_Depth_cm, Corrected_IntervalEnd_Depth_cm)) %>%
filter(X.1 != "142") %>%
filter(X.1 != "429") #duplicated rows
View(DFc2)
DF <- DF %>%
filter(CoreName_2 != "PEI-CAR-1-BA-")
hist(DF$Corrected_DBD_g_cm3)
#Read in data ----
DF <- read.csv(file = "./data/WongChristensenDataforModellingOct19.csv")
CF <- read.csv(file = "./data/compaction.csv")
#DF$intertidal <- ifelse(DF$Elevation > "0", "intertidal", "subtidal")
#DF$Coast_no <- DF[, DF$Coast == "Atlantic"]
DF$c_dens <- DF$OC_Per*DF$Corrected_DBD_g_cm3 # C (g / cm3)
DF$Site <- factor(DF$Site)
DF$Type <- factor(DF$Type)
DF <- DF %>%
filter(CoreName_2 != "PEI-CAR-1-BA-") ## DBD values are weird, i can probably figure this out if i try harder
DF$estCfactorS <- ifelse(DF$Extracted_IntervalStart_Depth_c != "0",  DF$Extracted_IntervalStart_Depth_cm/DF$Corrected_IntervalStart_Depth_cm, "0")
## discovered some weird numbers, looking into it.
# create a datafile mean and sd est conversion factors to identify possible errors
DF_cores <- DF %>%
group_by(SiteCode, Core.Number) %>%
filter(estCfactorS != "0") %>%
summarise(meanCF = mean(as.numeric(as.character(estCfactorS))), sdCF = sd(estCfactorS))
## replacing values for correction factors: [Mary double check this is still needed - March 4]
DF_test <- DF %>%
mutate(estCfactorS = as.numeric(estCfactorS)) %>%
mutate(estCfactorS = replace(estCfactorS, estCfactorS == 0.18018018018018, 0.869565217391304))
DF_cores <- DF_test %>%
group_by(SiteCode, Core.Number) %>%
filter(estCfactorS != "0") %>%
mutate(as.numeric(as.character(estCfactorS))) %>%
summarise(meanCF = mean(estCfactorS), sdCF = sd(estCfactorS))
DF2 <- DF %>%
left_join(DF_cores)
plot(DF2$meanCF, DF2$estCfactorS)
## having identified problems, we found the original datasheets. bring in Melisa's compaction data and merge
CF2 <- CF %>%
select(-c(CoreName_2, X, sample, compression))
DFc2 <- DFc %>%
mutate(estCfactorS = as.numeric(estCfactorS)) %>%
mutate(conversion = ifelse(is.na(conversion), "Missing", conversion)) %>%
mutate(meanCF = ifelse(is.na(meanCF), "25", meanCF)) %>%
mutate(CF_final = as.numeric(ifelse(conversion == "Missing", meanCF, conversion))) %>%
mutate(CF_final = ifelse(meanCF == "25", estCfactorS, CF_final))
## Create new corrected core segment values
DF3 <- DFc2 %>%
mutate(corr_SD = Extracted_IntervalStart_Depth_cm * CF_final) %>%
mutate(corr_ED = Extracted_IntervalEnd_Depth_cm * CF_final) %>%
mutate(corr_thickness = corr_ED - corr_SD) %>%
mutate(corr_segment_midpoint = (corr_ED + corr_SD)/2) %>%
mutate(c_stock = c_dens * corr_thickness) %>% #C (g / cm2)
select(!c(Elevation, X.y, REI_Scaled, Watercourse_NEAR_DIST.y, Corrected_Midpoint_cm_rounded, Corrected_IntervalStart_Depth_cm, Corrected_IntervalEnd_Depth_cm)) %>%
filter(X.1 != "142") %>%
filter(X.1 != "429") #duplicated rows
hist(DF3$c_dens)
# Testing random effects
mod0.1 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~ 1 | CoreName_2, method = "ML")
mod0.3 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~ 1 | Site/CoreName_2, method = "ML")
mod0.0 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~ corr_segment_midpoint | CoreName_2, method = "ML")
mod0.2 <- lme(log(c_dens) ~1 + log(REI_Raw)*Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~ corr_segment_midpoint | Site/CoreName_2, method = "ML")
anova(mod0.2, mod0.3, mod0.0, mod0.1)
mod18 <- lme(log(c_dens) ~1 + log(REI_Raw) + Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
summary(mod18)
## comparing predicted vs observed values
plot(predict(mod18), log(DF3$c_dens))
## comparing predicted vs observed values
plot(predict(mod18), log(DF3$c_dens), xlim = c(-7,2), ylim = c(-7, 2))
plot(Effect("REI_Raw", mod18, residuals = TRUE))
ggsave("REI_resids_C_dens.pdf", path = "./figures/", width = 5, height = 3)
plot(Effect("Watercourse_NEAR_DIST.x", mod18, residuals = TRUE))
ggsave("Watercourse_C_dens.pdf", path = "./figures/", width = 5, height = 3)
plot(Effect("Percent.Silt.Fraction", mod18, residuals = TRUE))
ggsave("Mud_C_dens.pdf", path = "./figures/", width = 5, height = 3)
plot(Effect("Type", mod18, residuals = TRUE))
exp(-1)
exp(-6)
exp(-1)
exp(1)
exp(1.5)
new_data4 <- data.frame(CoreName_2 = rep(unique(DF3$CoreName_2), each = 100), corr_segment_midpoint = rep(c(1:100), times = 84))
Site_info <- DF3 %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x) %>%
summarise(mud = mean(Percent.Silt.Fraction))
#use site level variables from above
new_data5 <- new_data4 %>%
left_join(Site_info) %>%
rename(Percent.Silt.Fraction = mud) %>%
mutate(corr_segment_midpoint = as.numeric(corr_segment_midpoint))
predicted_vals <- predict(mod18, new_data5, level = 0:2)
pred_vals <- predicted_vals %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = rep(c(1:100), times = 84)) %>%
mutate(c_dens = exp(predict.CoreName_2))
new_data6 <- new_data5 %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x) %>%
mutate(c_60a = ifelse(corr_segment_midpoint < 61, c_dens, 0)) %>%
mutate(c_25a = ifelse(corr_segment_midpoint < 26, c_dens, 0)) %>%
summarise_at(., c("c_dens", "c_60a", "c_25a"), sum)
## checking
data7 <- DF3 %>%
group_by(CoreName_2) %>%
summarise(Mean_c = mean(c_dens)) %>%
left_join(new_data6)
checking_100 <- ggplot(data7, aes(x = Mean_c*100, y = c_dens)) +
geom_point() +
xlab("C Stock est by Mean C (gC / cm^2)") +
ylab("C Stock est by model (gC / cm^2)") +
ggtitle("Carbon Stock to 100 cm (line is 1:1)") +
geom_abline(intercept = 0, slope = 1)
checking_100
View(data7)
pred_vals <- predicted_vals %>%
rename(predict.CoreName_2 = log_c_dens_cm3) %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = rep(c(1:100), times = 84)) %>%
mutate(c_dens = exp(c_dens_cm3))
pred_vals <- predicted_vals %>%
rename(predict.CoreName_2 = log_c_dens_cm3) %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = rep(c(1:100), times = 84)) %>%
mutate(c_dens = exp(log_c_dens_cm3))
pred_vals <- predicted_vals %>%
rename(predict.CoreName_2 = log_c_dens_cm3) %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = rep(c(1:100), times = 84)) %>%
mutate(c_dens = exp(log_c_dens_cm3))
hames(predicted_vals)
names(predicted_vals)
pred_vals <- predicted_vals %>%
rename(predict.CoreName_2 = log_c_dens_cm3)
pred_vals <- predicted_vals %>%
rename(log_c_dens_cm3 = predict.CoreName_2) %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = rep(c(1:100), times = 84)) %>%
mutate(c_dens = exp(log_c_dens_cm3))
new_data6 <- new_data5 %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x) %>%
mutate(c_60a = ifelse(corr_segment_midpoint < 61, c_dens, 0)) %>%
mutate(c_25a = ifelse(corr_segment_midpoint < 26, c_dens, 0)) %>%
rename(c_100 = c_dens) %>%
summarise_at(., c("c_100", "c_60a", "c_25a"), sum)
View(new_data6)
hist(new_data6$c_100)
pi
2*pi*2.38125)
2*pi*2.38125
pi*(2.38125^2)
length(unique(DF3$CoreName_2))
pred_vals <- predicted_vals %>%
rename(log_c_dens_cm3 = predict.CoreName_2) %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = rep(c(1:100), times = length(unique(DF3$CoreName_2)))) %>%
mutate(c_dens = exp(log_c_dens_cm3)) %>%
mutate(c_stock_cm) = c_dens * V_cseg) # c_stock in g per inch core
pred_vals <- predicted_vals %>%
rename(log_c_dens_cm3 = predict.CoreName_2) %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = rep(c(1:100), times = length(unique(DF3$CoreName_2)))) %>%
mutate(c_dens = exp(log_c_dens_cm3)) %>%
mutate(c_stock_cm = c_dens * V_cseg) # c_stock in g per inch core
V_cseg <- pi*(2.38125^2) # volume of 1 cm of core sediment
pred_vals <- predicted_vals %>%
rename(log_c_dens_cm3 = predict.CoreName_2) %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = rep(c(1:100), times = length(unique(DF3$CoreName_2)))) %>%
mutate(c_dens = exp(log_c_dens_cm3)) %>%
mutate(c_stock_cm = c_dens * V_cseg) # c_stock in g per inch core
new_data6 <- new_data5 %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x) %>%
mutate(c_60a = ifelse(corr_segment_midpoint < 61, c_dens, 0)) %>%
mutate(c_25a = ifelse(corr_segment_midpoint < 26, c_dens, 0)) %>%
rename(c_100 = c_dens) %>%
summarise_at(., c("c_100", "c_60a", "c_25a"), sum)
## checking
data7 <- DF3 %>%
group_by(CoreName_2) %>%
summarise(Mean_c = mean(c_dens)) %>%
left_join(new_data6)
hist(data7$c_100)
new_data6 <- new_data5 %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x, c_stock) %>%
mutate(c_60a = ifelse(corr_segment_midpoint < 61, c_dens, 0)) %>%
mutate(c_25a = ifelse(corr_segment_midpoint < 26, c_dens, 0)) %>%
rename(c_100 = c_dens) %>%
summarise_at(., c("c_100", "c_60a", "c_25a"), sum)
new_data6 <- new_data5 %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x, c_stock_cm) %>%
mutate(c_60a = ifelse(corr_segment_midpoint < 61, c_dens, 0)) %>%
mutate(c_25a = ifelse(corr_segment_midpoint < 26, c_dens, 0)) %>%
rename(c_100 = c_dens) %>%
summarise_at(., c("c_100", "c_60a", "c_25a"), sum)
## checking
data7 <- DF3 %>%
group_by(CoreName_2) %>%
summarise(Mean_c = mean(c_dens)) %>%
left_join(new_data6)
ggplot(data7, aes(x = c_dens, y = c_stock_cm)) +
geom_point() +
xlab("C_dens (g / cm3))") +
ylab("C Stock (g)") +
ggtitle("Carbon Stock per cm of core")
new_data4 <- data.frame(CoreName_2 = rep(unique(DF3$CoreName_2), each = 100), corr_segment_midpoint = rep(c(1:100), times = length(unique(DF3$CoreName_2))))
Site_info <- DF3 %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x) %>%
summarise(mud = mean(Percent.Silt.Fraction))
#use site level variables from above
new_data5 <- new_data4 %>%
left_join(Site_info) %>%
rename(Percent.Silt.Fraction = mud) %>%
mutate(corr_segment_midpoint = as.numeric(corr_segment_midpoint))
predicted_vals <- predict(mod18, new_data5, level = 0:2)
pred_vals <- predicted_vals %>%
rename(log_c_dens_cm3 = predict.CoreName_2) %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = rep(c(1:100), times = length(unique(DF3$CoreName_2)))) %>%
mutate(c_dens = exp(log_c_dens_cm3)) %>%
mutate(c_stock_cm = c_dens * V_cseg) # c_stock in g per inch core
new_data6 <- new_data5 %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x, c_stock_cm) %>%
mutate(c_60a = ifelse(corr_segment_midpoint < 61, c_stock, 0)) %>%
mutate(c_25a = ifelse(corr_segment_midpoint < 26, c_stock, 0)) %>%
rename(c_100 = c_stock) %>%
summarise_at(., c("c_100", "c_60a", "c_25a"), sum)
new_data6 <- new_data5 %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x, c_stock_cm) %>%
mutate(c_60a = ifelse(corr_segment_midpoint < 61, c_stock_cm, 0)) %>%
mutate(c_25a = ifelse(corr_segment_midpoint < 26, c_stock_cm, 0)) %>%
rename(c_100 = c_stock_cm) %>%
summarise_at(., c("c_100", "c_60a", "c_25a"), sum)
#use site level variables from above
new_data5 <- new_data4 %>%
left_join(Site_info) %>%
rename(Percent.Silt.Fraction = mud) %>%
mutate(corr_segment_midpoint = as.numeric(corr_segment_midpoint))
predicted_vals <- predict(mod18, new_data5, level = 0:2)
pred_vals <- predicted_vals %>%
rename(log_c_dens_cm3 = predict.CoreName_2) %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = rep(c(1:100), times = length(unique(DF3$CoreName_2)))) %>%
mutate(c_dens = exp(log_c_dens_cm3)) %>%
mutate(c_stock_cm = c_dens * V_cseg) # c_stock in g per inch core
new_data6 <- new_data5 %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x, c_stock_cm) %>%
mutate(c_60a = ifelse(corr_segment_midpoint < 61, c_stock_cm, 0)) %>%
mutate(c_25a = ifelse(corr_segment_midpoint < 26, c_stock_cm, 0))
new_data6 <- new_data5 %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x, c_stock_cm) %>%
mutate(c_60a = ifelse(corr_segment_midpoint < 61, c_stock_cm, 0)) %>%
mutate(c_25a = ifelse(corr_segment_midpoint < 26, c_stock_cm, 0)) %>%
rename(c_100 = c_stock_cm)
new_data6 <- new_data5 %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x, c_stock_cm) %>%
mutate(c_60a = ifelse(corr_segment_midpoint < 61, c_stock_cm, 0)) %>%
mutate(c_25a = ifelse(corr_segment_midpoint < 26, c_stock_cm, 0)) %>%
rename(c_100 = c_stock_cm) %>%
summarise_at(., c("c_100", "c_60a", "c_25a"), sum)
new_data6 <- new_data5 %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x, c_stock_cm) %>%
mutate(c_60a = ifelse(corr_segment_midpoint < 61, c_stock_cm, 0)) %>%
mutate(c_25a = ifelse(corr_segment_midpoint < 26, c_stock_cm, 0)) %>%
rename(c_100 = c_stock_cm)
names(new_data6)
new_data6 <- new_data5 %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x, c_stock_cm) %>%
mutate(c_60a = ifelse(corr_segment_midpoint < 61, c_stock_cm, 0)) %>%
mutate(c_25a = ifelse(corr_segment_midpoint < 26, c_stock_cm, 0)) %>%
rename(c_100 = c_stock_cm) %>%
summarise_at(., c("c_100", "c_60a", "c_25a"), sum)
new_data6 <- new_data5 %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x, c_stock_cm) %>%
mutate(c_60a = ifelse(corr_segment_midpoint < 61, c_stock_cm, 0)) %>%
mutate(c_25a = ifelse(corr_segment_midpoint < 26, c_stock_cm, 0)) %>%
rename(c_100 = c_stock_cm)
new_data6 <- new_data5 %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Raw, Type, Watercourse_NEAR_DIST.x, c_stock_cm) %>%
mutate(c_60 = ifelse(corr_segment_midpoint < 61, c_stock_cm, 0)) %>%
mutate(c_25 = ifelse(corr_segment_midpoint < 26, c_stock_cm, 0)) %>%
rename(c_100 = c_stock_cm) %>%
summarise_at(., c("c_100", "c_60", "c_25"), sum)
