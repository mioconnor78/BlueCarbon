dim(DFF)
DFF <- DF_LOI %>%
left_join(DF3, by = c("CoreName_2", "Extracted_IntervalStart_Depth_cm"))
dim(DFF)
# c_percent
mod1 <- lm(I(DFF$OC_Per.x/100) ~ I(DFF$LOI_Percent/100))
summary(mod1)
LOI_fun <- function(x) coef(mod1)[2] * (x) + coef(mod1)[1]
LOI_c_per <- ggplot(DFF, aes(x = I(LOI_Percent/100), y = I(OC_Per.x/100))) +
geom_point() +
theme_bw() +
geom_function(fun = LOI_fun)
LOI_c_per
class(DFF$LOI_Percent)
class(DFF$OC_Per.x)
DFF <- DF_LOI %>%
left_join(DF3, by = c("CoreName_2", "Extracted_IntervalStart_Depth_cm")) %>%
mutate(LOI_Percent = LOI_Percent/100) %>%
mutate(OC_Per = OC_Per.x/100)
# c_percent
mod1 <- lm((DFF$OC_Per) ~ (DFF$LOI_Percent))
summary(mod1)
LOI_fun <- function(x) coef(mod1)[2] * (x) + coef(mod1)[1]
LOI_c_per <- ggplot(DFF, aes(x = LOI_Percent, y = OC_Per)) +
geom_point() +
theme_bw() +
geom_function(fun = LOI_fun)
LOI_c_per
# c_percent_transformed
mod2 <- lm(sqrt(DFF$OC_Per) ~ sqrt(DFF$LOI_Percent))
summary(mod2)
LOI_fun2 <- function(x) coef(mod2)[2] * (x) + coef(mod2)[1]
LOI_fun2 <- function(x) coef(mod2)[2] * (x) + coef(mod2)[1]
LOI_OCPer2 <- ggplot(DFF, aes(x = sqrt(LOI_Percent), y = sqrt(OC_Per))) +
geom_point() +
theme_bw() +
geom_function(fun = LOI_fun2)
LOI_OCPer2
LOI_c_per <- ggplot(DFF, aes(x = LOI_Percent, y = OC_Per)) +
geom_point() +
theme_bw() +
geom_function(fun = LOI_fun) +
geom_abline(intercept = 0, slope = 1)
LOI_c_per
LOI_OCPer2 <- ggplot(DFF, aes(x = sqrt(LOI_Percent), y = sqrt(OC_Per))) +
geom_point() +
theme_bw() +
geom_function(fun = LOI_fun2) +
geom_abline(intercept = 0, slope = 1)
LOI_OCPer2
# c_percent_transformed
mod3 <- lm(log(DFF$OC_Per) ~ log(DFF$LOI_Percent))
summary(mod3)
LOI_fun3 <- function(x) coef(mod3)[2] * (x) + coef(mod3)[1]
LOI_OCPer3 <- ggplot(DFF, aes(x = log(LOI_Percent), y = log(OC_Per))) +
geom_point() +
theme_bw() +
geom_function(fun = LOI_fun3) +
geom_abline(intercept = 0, slope = 1)
LOI_OCPer3
mod1
anova(mod1)
confint(mod1)
coef(mod1)
coef(mod1)[2] - confint(mod1)[2,1]
confint(mod1)[2,1]
coef(mod1)[2] - confint(mod1)[2,2]
summary(mod1)
hist(sqrt(DFF$LOI_Percent))
hist(log(DFF$LOI_Percent))
hist((DFF$LOI_Percent))
hist(sqrt(DFF$OC_Per))
hist(log(DFF$OC_Per))
hist((DFF$OC_Per))
summary(mod3)
confint(mod3)
LOI_OCPer3
LOI_OCPer3 <- ggplot(DFF, aes(x = log(LOI_Percent), y = log(OC_Per))) +
geom_point() +
theme_bw() +
geom_function(fun = LOI_fun3) #+
LOI_OCPer3
LOI_OCPer3 <- ggplot(DFF, aes(x = ln(LOI_Percent), y = ln(OC_Per))) +
geom_point() +
theme_bw() +
geom_function(fun = LOI_fun3) #+
LOI_OCPer3
LOI_OCPer3 <- ggplot(DFF, aes(x = log(LOI_Percent), y = log(OC_Per))) +
geom_point() +
theme_bw() +
xlab("Loss on Ingnition (LOI) (%)") +
ylab("Organic Carbon from Elemental Analysis (%)") +
ggtitle("Carbon estimated by Elemantal Analysis and LOI") +
geom_function(fun = LOI_fun3) #+
LOI_OCPer3
LOI_OCPer3 <- ggplot(DFF, aes(x = log(LOI_Percent), y = log(OC_Per))) +
geom_point() +
theme_bw() +
xlab("Loss on Ingnition (LOI) (%)") +
ylab("Organic Carbon from Elemental Analysis (%)") +
# ggtitle("Carbon estimated by Elemental Analysis and LOI") +
geom_function(fun = LOI_fun3) #+
LOI_OCPer3
ggsave("OC_LOI.tiff", path = "./figures/", width = 4, height = 4)
LOI_OCPer3 <- ggplot(DFF, aes(x = log(LOI_Percent), y = log(OC_Per))) +
geom_point() +
theme_bw() +
theme(axis.line = element_line(color='black'),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),) +
geom_smooth(method=lm , color="black", se=TRUE) +
#geom_function(fun = LOI_fun) +
annotate("text", x = 1, y=2, label = paste("R^2 == 0.88"), parse = TRUE) +
annotate("text", x = -4.5, y=-3, label = ("y = 1.33x - 0.08"))
LOI_OCPer3 <- ggplot(DFF, aes(x = log(LOI_Percent), y = log(OC_Per))) +
geom_point() +
theme_bw() +
theme(axis.line = element_line(color='black'),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),) +
geom_smooth(method=lm , color="black", se=TRUE) +
#geom_function(fun = LOI_fun) +
annotate("text", x = 1, y=2, label = paste("R^2 == 0.88"), parse = TRUE) +
annotate("text", x = -4.5, y=-3, label = ("y = 1.33x - 0.08")) +
xlab("Loss on Ingnition (LOI) ln(%)") +
ylab("Organic Carbon from Elemental Analysis ln(%)") %+
LOI_OCPer3 <- ggplot(DFF, aes(x = log(LOI_Percent), y = log(OC_Per))) +
geom_point() +
theme_bw() +
theme(axis.line = element_line(color='black'),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),) +
geom_smooth(method=lm , color="black", se=TRUE) +
#geom_function(fun = LOI_fun) +
annotate("text", x = 1, y=2, label = paste("R^2 == 0.88"), parse = TRUE) +
annotate("text", x = -4.5, y=-3, label = ("y = 1.33x - 0.08")) +
xlab("Loss on Ingnition (LOI) ln(%)") +
ylab("Organic Carbon from Elemental Analysis ln(%)") +
# ggtitle("Carbon estimated by Elemental Analysis and LOI") +
geom_function(fun = LOI_fun3) #+
LOI_OCPer3
LOI_OCPer3 <- ggplot(DFF, aes(x = log(LOI_Percent), y = log(OC_Per))) +
geom_point() +
theme_bw() +
theme(axis.line = element_line(color='black'),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),) +
geom_smooth(method=lm , color="black", se=TRUE) +
#geom_function(fun = LOI_fun) +
annotate("text", x = -4.5, y=-3.5, label = paste("R^2 == 0.88"), parse = TRUE) +
annotate("text", x = -4.5, y=-3, label = ("y = 1.33x - 0.08")) +
xlab("Loss on Ignition (LOI) ln(%)") +
ylab("Organic Carbon from Elemental Analysis ln(%)") +
# ggtitle("Carbon estimated by Elemental Analysis and LOI") +
geom_function(fun = LOI_fun3) #+
LOI_OCPer3
LOI_OCPer3 <- ggplot(DFF, aes(x = log(LOI_Percent), y = log(OC_Per))) +
geom_point() +
theme_bw() +
theme(axis.line = element_line(color='black'),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),) +
geom_smooth(method=lm , color="black", se=TRUE) +
#geom_function(fun = LOI_fun) +
annotate("text", x = -4.5, y=-3.5, label = paste("R^2 == 0.88"), parse = TRUE) +
annotate("text", x = -4.5, y=-3, label = ("y = 1.33x - 0.08")) +
xlab("Loss on Ignition (LOI) ln(%)") +
ylab("Organic Carbon from Elemental Analysis ln(%)") +
# ggtitle("Carbon estimated by Elemental Analysis and LOI") +
geom_function(fun = LOI_fun3, color = "red") #+
LOI_OCPer3
LOI_OCPer3
LOI_OCPer3 <- ggplot(DFF, aes(x = log(LOI_Percent), y = log(OC_Per))) +
geom_point() +
theme_bw() +
theme(axis.line = element_line(color='black'),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),) +
geom_smooth(method=lm , color="black", se=TRUE) +
#geom_function(fun = LOI_fun) +
annotate("text", x = -4.5, y=-3.5, label = paste("R^2 == 0.88"), parse = TRUE) +
annotate("text", x = -4.5, y=-3, label = ("y = 1.33x - 0.08")) +
xlab("Loss on Ignition (LOI) ln(%)") +
ylab("Organic Carbon from Elemental Analysis ln(%)") #+
LOI_OCPer3
ggsave("OC_LOI.tiff", path = "./figures/", width = 4, height = 4)
mod3a <- lm(log(DFF$OC_Per) ~ log(DFF$LOI_Percent)*sqrt(DFF$REI_Scaled) + log(DFF$LOI_Percent)*log(DFF$Watercourse_NEAR_DIST.x))
model.sel(mod3, mod3a)
mod3b <- lm(log(DFF$OC_Per) ~ log(DFF$LOI_Percent) + sqrt(DFF$REI_Scaled) + log(DFF$Watercourse_NEAR_DIST.x))
model.sel(mod3, mod3b)
model.sel(mod3a, mod3b)
mod3c <- lm(log(DFF$OC_Per) ~ log(DFF$LOI_Percent)*sqrt(DFF$REI_Scaled))
model.sel(mod3, mod3c)
mod3d <- lm(log(DFF$OC_Per) ~ log(DFF$LOI_Percent)*log(DFF$Watercourse_NEAR_DIST.x))
model.sel(mod3, mod3d)
View(DFF)
mod30 <- lme(log(OC_Per) ~ log(LOI_Percent), data = DFF, random = 1 | CoreName_2)
mod30 <- lme(log(OC_Per) ~ 1 + log(LOI_Percent), data = DFF, random = 1 | Site/CoreName_2)
mod30 <- lme(log(OC_Per) ~ 1 + log(LOI_Percent), data = DFF, random = ~ 1 | Site/CoreName_2)
mod30 <- lme(log(OC_Per) ~ 1 + log(LOI_Percent), data = DFF, random = ~ 1 | SiteName2/CoreName_2)
mod3a <- lme(log(OC_Per) ~ 1 + log(LOI_Percent)*sqrt(DFF$REI_Scaled), data = DFF, random = ~ 1 | SiteName2/CoreName_2)
mod3a <- lme(log(OC_Per) ~ 1 + log(LOI_Percent)*sqrt(REI_Scaled), data = DFF, random = ~ 1 | SiteName2/CoreName_2)
mod30 <- lme(log(OC_Per) ~ 1 + log(LOI_Percent), data = DFF, random = ~ 1 | SiteName2/CoreName_2)
mod3a <- lme(log(OC_Per) ~ 1 + log(LOI_Percent) + sqrt(REI_Scaled), data = DFF, random = ~ 1 | SiteName2/CoreName_2)
DFF <- DF_LOI %>%
left_join(DF3, by = c("CoreName_2", "Extracted_IntervalStart_Depth_cm")) %>%
mutate(LOI_Percent = LOI_Percent/100) %>%
mutate(OC_Per = OC_Per.x/100) %>%
filter(SiteCode.x != "SIp")
mod30 <- lme(log(OC_Per) ~ 1 + log(LOI_Percent), data = DFF, random = ~ 1 | SiteName2/CoreName_2)
mod3a <- lme(log(OC_Per) ~ 1 + log(LOI_Percent) + sqrt(REI_Scaled), data = DFF, random = ~ 1 | SiteName2/CoreName_2)
mod3b <- lm(log(DFF$OC_Per) ~ 1 + log(LOI_Percent) * sqrt(REI_Scaled), data = DFF, random = ~ 1 | SiteName2/CoreName_2)
model.sel(mod30, mod3a)
hist(DFF$LOI_Percent)
exp(0.088)
exp(0.088) * V_dens
exp(0.088) * V_seg
V_cseg <- pi*(2.38125^2) # volume of 1 cm of core sediment, cm3
exp(0.088) * V_cseg
exp(0.088) * V_cseg * 100
exp(0.088) * V_cseg * 100 / A_cseg
exp(0.088) * V_cseg * 100 / A_cseg
A_cseg <- pi*(2.38125^2) # area of top of core, cm2
exp(0.088) * V_cseg * 100 / A_cseg
hist(DF3$meanCF)
hist(as.numeric(DF3$meanCF))
hist(as.numeric(DF3$meanCF[,DF3$meanCF < "25"]))
hist(DFc2$CF_final)
mean(DFc2$CF_final)
length(unique(DF3$CoreName_2))
length(unique(DF3$SiteCode))
0.263^2
sd(DFc2$CF_final)
dim(data7)
dim(DF3)
dim(new_data4)
new_data4 <- data.frame(CoreName_2 = rep(unique(DF3$CoreName_2), each = 100), corr_segment_midpoint = rep(c(1:100), times = length(unique(DF3$CoreName_2))))
Site_info <- DF3 %>%
group_by(Site, CoreName_2, REI_Scaled, Type, Watercourse_NEAR_DIST.x, Coast) %>%
summarise(Percent.Silt.Fraction = mean(Percent.Silt.Fraction))
#use site level variables from above
new_data5 <- new_data4 %>%
left_join(Site_info) %>%
mutate(corr_segment_midpoint = as.numeric(corr_segment_midpoint))
predicted_vals <- predict(mod18, new_data5, level = 0:2)
pred_vals <- predicted_vals %>%
rename(log_c_dens_cm3 = predict.CoreName_2) %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = rep(c(1:100), times = length(unique(DF3$CoreName_2)))) %>%
mutate(c_dens = exp(log_c_dens_cm3)) %>%
mutate(c_stock_cm = c_dens * V_cseg)  # c_stock in g per cm core length
mod18 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
predicted_vals <- predict(mod18, new_data5, level = 0:2)
pred_vals <- predicted_vals %>%
rename(log_c_dens_cm3 = predict.CoreName_2) %>%
separate(CoreName_2, into = c("Site", "CoreName_2"),
sep ="/") %>%
mutate(corr_segment_midpoint = rep(c(1:100), times = length(unique(DF3$CoreName_2)))) %>%
mutate(c_dens = exp(log_c_dens_cm3)) %>%
mutate(c_stock_cm = c_dens * V_cseg)  # c_stock in g per cm core length
new_data6 <- new_data5 %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Scaled, Type, Watercourse_NEAR_DIST.x) %>%
mutate(c_60 = ifelse(corr_segment_midpoint < 61, c_stock_cm, 0)) %>%
mutate(c_25 = ifelse(corr_segment_midpoint < 26, c_stock_cm, 0)) %>%
summarise_at(., c("c_stock_cm", "c_60", "c_25"), sum) %>% #C g / inch core
rename(c_100 = c_stock_cm) %>%
mutate(c_60_cm2 = c_60/A_cseg) %>% # c_stock / cm2
mutate(c_100_cm2 = c_100/A_cseg) %>%
mutate(c_25_cm2 = c_25/A_cseg)
## checking
data7 <- DF3 %>%
group_by(CoreName_2) %>%
mutate(c_stock_est = (c_dens*V_cseg)/A_cseg) %>%
summarise(Mean_c = mean(c_stock_est)) %>%
left_join(new_data6)
range(data7$c_100_cm2)
(range(data7$c_100_cm2))*10000
data7s <- subset(data7, Type == Seagrass)
data7s <- subset(data7, Type.x == Seagrass)
data7s <- subset(data7, Type == "Seagrass")
dim(data7s)
names(data7)
levels(data7$Type)
levels(as.factor(data7$Type))
data7s <- subset(data7, Type == "SG")
dim(data7s)
(range(data7s$c_100_cm2))*10000
(range(data7s$c_60_cm2))*10000
(range(data7s$c_25_cm2))*10000
View(data7)
names(new_data11)
names(new_data6)
names(new_data5)
plot(new_data5$Type ~ new_data5$Percent.Silt.Fraction)
range(new_data5$Percent.Silt.Fraction)
plot(new_data5$Percent.Silt.Fraction ~ new_data5$Type)
levels(new_data5$Type)
plot(new_data5$Percent.Silt.Fraction ~ factor(new_data5$Type))
mod18s <- lme(sqrt(Percent.Silt.Fraction) ~1 + sqrt(REI_Scaled) + Type + log(Watercourse_NEAR_DIST.x), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod1s <- lme(sqrt(Percent.Silt.Fraction) ~1 + sqrt(REI_Scaled) + log(Watercourse_NEAR_DIST.x), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod2s <- lme(sqrt(Percent.Silt.Fraction) ~1 + sqrt(REI_Scaled) + Type, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod3s <- lme(sqrt(Percent.Silt.Fraction) ~1 + Type, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod4s <- lme(sqrt(Percent.Silt.Fraction) ~1, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
model.sel(mod18s, mod1s, mod2s, mod3s, mod4s)
summary(mod2s)
summary(mod18s)
(mean(data7s$c_100_cm2))*10000
(sd(data7s$c_100_cm2))*10000
mod0 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled)*Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
#mod1a <- lme(log(c_dens) ~1 + log(REI_Raw) + Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod1 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
## all site level predictors
mod2 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + log(Watercourse_NEAR_DIST.x) + Coast, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod3 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled)*Type + log(Watercourse_NEAR_DIST.x) + Coast, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod4 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + log(Watercourse_NEAR_DIST.x)*Type + Coast, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod5 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + log(Watercourse_NEAR_DIST.x), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod6 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod7 <- lme(log(c_dens) ~1, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
## all site + core level predictors
mod8 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled)*Type + log(Watercourse_NEAR_DIST.x) + Coast + (corr_segment_midpoint), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod9 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled)*Type + log(Watercourse_NEAR_DIST.x) + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod11 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod12 <- lme(log(c_dens) ~1 + Type + log(Watercourse_NEAR_DIST.x) + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod13 <- lme(log(c_dens) ~1 + Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod14 <- lme(log(c_dens) ~1 + Type + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod15 <- lme(log(c_dens) ~1 + Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod16 <- lme(log(c_dens) ~1 + Type*log(Watercourse_NEAR_DIST.x) + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod17 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled)*Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod18 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod18a <- lme(log(c_dens) ~1 + sqrt(Percent.Silt.Fraction) + corr_segment_midpoint, data = DF3, random = ~corr_segment_midpoint| Site/CoreName_2, method = "REML")
mod19 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + Type + log(Watercourse_NEAR_DIST.x)  + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod20 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + Type + log(Watercourse_NEAR_DIST.x)  + corr_segment_midpoint, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod23 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled)*Type + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod24 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled)*Type + log(Watercourse_NEAR_DIST.x) + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod25 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled)*Type + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
model.sel(mod0, mod1, mod2,mod3, mod4, mod5, mod6, mod7, mod8, mod9, mod11, mod12, mod13, mod14, mod15, mod16, mod17, mod18, mod18a, mod19, mod20,  mod23, mod24, mod25)
mod21 <- lme(log(c_dens) ~1 + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
model.sel(mod0, mod1, mod2,mod3, mod4, mod5, mod6, mod7, mod8, mod9, mod11, mod12, mod13, mod14, mod15, mod16, mod17, mod18, mod18a, mod19, mod20, mod21, mod23, mod24, mod25)
mod22 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + log(Watercourse_NEAR_DIST.x) + Type, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
model.sel(mod0, mod1, mod2,mod3, mod4, mod5, mod6, mod7, mod8, mod9, mod11, mod12, mod13, mod14, mod15, mod16, mod17, mod18, mod18a, mod19, mod20, mod21, mod22, mod23, mod24, mod25)
(mean(data7s$c_25_cm2))*10000
(mean(data7s$c_25_cm2))
(mean(data7s$c_100_cm2))
exp(0.088) * V_cseg * 100 / A_cseg
exp(0.088) * V_cseg * 25 / A_cseg
(mean(data7s$c_25_cm2))
(mean(data7s$c_25))
new_data6 <- new_data5 %>%
left_join(pred_vals) %>%
group_by(Site, CoreName_2, REI_Scaled, Type, Watercourse_NEAR_DIST.x) %>%
mutate(c_60 = ifelse(corr_segment_midpoint < 61, c_stock_cm, 0)) %>%
mutate(c_25 = ifelse(corr_segment_midpoint < 26, c_stock_cm, 0)) %>%
summarise_at(., c("c_stock_cm", "c_60", "c_25"), sum) %>% #C g / inch core
rename(c_100 = c_stock_cm) %>%
mutate(c_60_cm2 = c_60/A_cseg) %>% # c_stock / cm2
mutate(c_100_cm2 = c_100/A_cseg) %>%
mutate(c_25_cm2 = c_25/A_cseg)
data7s <- subset(data7, Type == "SG")
(range(data7s$c_25_cm2))*10000
(mean(data7s$c_25_cm2))*10000
(mean(data7s$c_25))
(mean(data7s$c_25_cm2))
(mean(data7s$c_25))
(range(data7s$c_25_cm2))*10000
(range(data7s$c_100_cm2))*10000
(range(data7s$c_100_cm2))
exp(0.088)
summary(mod18)
exp(0.84)
exp(0.088)
mod18 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
summary(mod18)
exp(0.088)
hist(DF3$c_dens)
mean(DF3$c_dens)
mean(log(DF3$c_dens))
V_cseg
range(DF3$c_dens)
exp(mean(log(DF3$c_dens)))
## mean of analyzed c_dens
mean(log(DF3$c_dens))
## mean of analyzed c_dens
mean(log(DF3$c_dens)) + 0.088
exp(mean(log(DF3$c_dens)) + 0.088) - exp(mean(log(DF3$c_dens)))
mean(DF3$c_dens)
mean(log(DF3$c_dens))
exp(mean(log(DF3$c_dens)))
exp(min(log(DF3$c_dens)) + 0.088) - exp(min(log(DF3$c_dens)))
exp(min(log(DF3$c_dens)))
exp(max(log(DF3$c_dens)) + 0.088) - exp(max(log(DF3$c_dens)))
exp(max(log(DF3$c_dens)))
41.9/68
## packages
library(tidyverse)
library(nlme)
library(MuMIn)
library(car)
library(ggplot2)
library(effects)
#Read in data ----
DF <- read.csv(file = "./data/WongChristensenDataforModellingOct19.csv")
DF_LOI <- read.csv(file = "./data/BlueCarbonData_1.csv")
CF <- read.csv(file = "./data/compaction.csv")
#DF$intertidal <- ifelse(DF$Elevation > "0", "intertidal", "subtidal")
#DF$Coast_no <- DF[, DF$Coast == "Atlantic"]
DF$c_dens <- (DF$OC_Per/100)*DF$Corrected_DBD_g_cm3 # C (g / cm3)
DF$Site <- factor(DF$Site)
DF$Type <- factor(DF$Type)
V_cseg <- pi*(2.38125^2) *1 # volume of 1 cm of core sediment, cm3
A_cseg <- pi*(2.38125^2) # area of top of core, cm2
DF$estCfactorS <- ifelse(DF$Extracted_IntervalStart_Depth_c != "0",  DF$Extracted_IntervalStart_Depth_cm/DF$Corrected_IntervalStart_Depth_cm, "0")
## discovered some weird numbers, looking into it.
# create a datafile mean and sd est conversion factors to identify possible errors
DF_cores <- DF %>%
group_by(SiteCode, Core.Number) %>%
filter(estCfactorS != "0") %>%
summarise(meanCF = mean(as.numeric(as.character(estCfactorS))), sdCF = sd(estCfactorS))
## replacing values for correction factors: [Mary double check this is still needed - March 4]
DF_test <- DF %>%
mutate(estCfactorS = as.numeric(estCfactorS)) %>%
mutate(estCfactorS = replace(estCfactorS, estCfactorS == 0.18018018018018, 0.869565217391304))
DF_cores <- DF_test %>%
group_by(SiteCode, Core.Number) %>%
filter(estCfactorS != "0") %>%
mutate(as.numeric(as.character(estCfactorS))) %>%
summarise(meanCF = mean(estCfactorS), sdCF = sd(estCfactorS))
DF2
## having identified problems, we found the original datasheets. bring in Melisa's compaction data and merge
CF2 <- CF %>%
select(-c(CoreName_2, X, sample, compression))
DFc <- DF2 %>%
left_join(CF2)
DFc2 <- DFc %>%
mutate(estCfactorS = as.numeric(estCfactorS)) %>%
mutate(conversion = ifelse(is.na(conversion), "Missing", conversion)) %>%
mutate(meanCF = ifelse(is.na(meanCF), "25", meanCF)) %>%
mutate(CF_final = as.numeric(ifelse(conversion == "Missing", meanCF, conversion))) %>%
mutate(CF_final = ifelse(meanCF == "25", estCfactorS, CF_final))
## Create new corrected core segment values
DF3 <- DFc2 %>%
mutate(corr_SD = Extracted_IntervalStart_Depth_cm * CF_final) %>%
mutate(corr_ED = Extracted_IntervalEnd_Depth_cm * CF_final) %>%
mutate(corr_thickness = corr_ED - corr_SD) %>%
mutate(corr_segment_midpoint = (corr_ED + corr_SD)/2) %>%
# mutate(c_stock = c_dens * corr_thickness) %>% #C (g / cm2)
select(!c(Elevation, X.y, Watercourse_NEAR_DIST.y, Corrected_Midpoint_cm_rounded, Corrected_IntervalStart_Depth_cm, Corrected_IntervalEnd_Depth_cm)) %>% #REI_Scaled,
filter(X.1 != "142") %>%
filter(X.1 != "429") #duplicated rows
DFc <- DF2 %>%
left_join(CF2)
DF2 <- DF %>%
left_join(DF_cores)
plot(DF2$meanCF, DF2$estCfactorS)
## having identified problems, we found the original datasheets. bring in Melisa's compaction data and merge
CF2 <- CF %>%
select(-c(CoreName_2, X, sample, compression))
DFc <- DF2 %>%
left_join(CF2)
DFc2 <- DFc %>%
mutate(estCfactorS = as.numeric(estCfactorS)) %>%
mutate(conversion = ifelse(is.na(conversion), "Missing", conversion)) %>%
mutate(meanCF = ifelse(is.na(meanCF), "25", meanCF)) %>%
mutate(CF_final = as.numeric(ifelse(conversion == "Missing", meanCF, conversion))) %>%
mutate(CF_final = ifelse(meanCF == "25", estCfactorS, CF_final))
## Create new corrected core segment values
DF3 <- DFc2 %>%
mutate(corr_SD = Extracted_IntervalStart_Depth_cm * CF_final) %>%
mutate(corr_ED = Extracted_IntervalEnd_Depth_cm * CF_final) %>%
mutate(corr_thickness = corr_ED - corr_SD) %>%
mutate(corr_segment_midpoint = (corr_ED + corr_SD)/2) %>%
# mutate(c_stock = c_dens * corr_thickness) %>% #C (g / cm2)
select(!c(Elevation, X.y, Watercourse_NEAR_DIST.y, Corrected_Midpoint_cm_rounded, Corrected_IntervalStart_Depth_cm, Corrected_IntervalEnd_Depth_cm)) %>% #REI_Scaled,
filter(X.1 != "142") %>%
filter(X.1 != "429") #duplicated rows
View(DF3)
mod0 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled)*Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod1 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
## all site level predictors
mod2 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + log(Watercourse_NEAR_DIST.x) + Coast, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod3 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled)*Type + log(Watercourse_NEAR_DIST.x) + Coast, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod4 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + log(Watercourse_NEAR_DIST.x)*Type + Coast, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod5 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + log(Watercourse_NEAR_DIST.x), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod22 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + log(Watercourse_NEAR_DIST.x) + Type, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod6 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod7 <- lme(log(c_dens) ~1, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod8 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled)*Type + log(Watercourse_NEAR_DIST.x) + Coast + (corr_segment_midpoint), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod9 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled)*Type + log(Watercourse_NEAR_DIST.x) + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod11 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod12 <- lme(log(c_dens) ~1 + Type + log(Watercourse_NEAR_DIST.x) + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod13 <- lme(log(c_dens) ~1 + Type + log(Watercourse_NEAR_DIST.x) + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod14 <- lme(log(c_dens) ~1 + Type + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod15 <- lme(log(c_dens) ~1 + Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod16 <- lme(log(c_dens) ~1 + Type*log(Watercourse_NEAR_DIST.x) + Coast + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod17 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled)*Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod18 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + Type + log(Watercourse_NEAR_DIST.x) + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod18a <- lme(log(c_dens) ~1 + sqrt(Percent.Silt.Fraction) + corr_segment_midpoint, data = DF3, random = ~corr_segment_midpoint| Site/CoreName_2, method = "REML")
mod19 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + Type + log(Watercourse_NEAR_DIST.x)  + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod20 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled) + Type + log(Watercourse_NEAR_DIST.x)  + corr_segment_midpoint, data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod21 <- lme(log(c_dens) ~1 + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod23 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled)*Type + Coast + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod24 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled)*Type + log(Watercourse_NEAR_DIST.x) + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
mod25 <- lme(log(c_dens) ~1 + sqrt(REI_Scaled)*Type + corr_segment_midpoint + sqrt(Percent.Silt.Fraction), data = DF3, random = ~corr_segment_midpoint | Site/CoreName_2, method = "REML")
model.sel(mod0, mod1, mod2,mod3, mod4, mod5, mod6, mod7, mod8, mod9, mod11, mod12, mod13, mod14, mod15, mod16, mod17, mod18, mod18a, mod19, mod20, mod21, mod22, mod23, mod24, mod25)
summary(mod11)
